<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<!-- saved from url=(0049)file:///home/lchen/Dropbox/Club/Skills/github.htm -->
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">


<title>GitHub</title>
<script type="text/javascript" src="file:///home/lchen/Dropbox/Club/Skills/Jing%20He%27s%20group_files/jquery.js"></script>

<style type="text/css">
<!--
body{
	font-size: 14px;
	color: black;
	font-family: "trebuchet ms", helvetica, sans-serif;
}

a:link {
	color: #616D7E;
	text-decoration: none;
}

a:visited {
	text-decoration: none;
	color: #616D7E;
}

a:hover {
	text-decoration: none;
	color: #616D7E;
}

#header
{
	position: relative;
	width: 900px;
	height: 60px;
	margin: 0px auto;
	padding-bottom: 0px;
     text-shadow: 2px 2px 5px #888888;
	background: inherit;
	font-size: 40px;
	color: black;
	font-weight: bold;
	letter-spacing: -1px;
      text-align:center;
}

#content
{
     position: relative;
     font-family: arial, Georgia;
     box-shadow: 8px 8px 3px #888888;
     border-radius:15px;
	background: inherit;
	width: 900px;
	position: relative;
	margin: 10px;
	font-size: 16px;
	color: #5F5A59;
	border-style: solid;
	border-width: 1px 3px 3px 1px;
	border-color: #736F6E #5E5A80 #5E5A80 #736F6E;
	padding: 10px 10px 10px 10px;
	line-height: 30px;
     margin: 0px auto;
     overflow-y: auto;
}

.display li
{
     position: relative;
	height:40px;
	line-height:40px;
	width:290px;
	float:left;
	text-align:center;
	color: #616D7E;
	list-style: none;
	font-weight: bold;
	font-size:16px;
	border-bottom:1px dashed #856F5C;
     overflow:hidden;
}

#content a
{
	display: block;
	background: inherit;
	height:40px;
	line-height:40px;
	width:290px;
     text-align:center;
}

#content a:link
{
	text-decoration: none;
	color: #616D7E;
}

#content a:visited
{
	text-decoration: none;
	color: #616D7E;
}

#content a:hover
{
	text-decoration: none;
}

.display h3
{
     width: 800px;
     color: black;
     box-shadow: 10px 10px 10px #888888;
     border-radius:30px;
	margin: 10px 5px 10px 5px;
	height: 30px;
	line-height: 30px;
	font-size: 18px;
	background-color: #E3E4FA;
	padding: 5px 10px 5px 30px;
	letter-spacing: -1px;
     float: left;
}

.display h4
{
	position: relative;
	width: 800px;
	color: #5F5A59;
	box-shadow: 10px 10px 10px #888888;
	border-radius:10px;
	margin: 10px 5px 10px 5px;
	line-height: 30px;
	font-size: 18px;
	background-color: #FFF5EE;
	padding: 5px 10px 5px 30px;
	letter-spacing: -1px;
	float: left;
}

#content h4
{
     border-bottom: 3px solid #6D7B8D;
	margin: 0px 5px 5px 5px;
	font-size: 18px;
	letter-spacing: -1px;
}

#content h5
{
     font-family: arial, Georgia;
     color: #5F5A59;
	font-size: 16px;
}

#content h6
{
     font-family: arial, Georgia;
	position: relative;
	margin: 20px auto;
	line-height: 30px;
	font-size: 16px;
	letter-spacing: -1px;
}

#footer
{
     color: #6D7B8D;
     padding: 5px 20px 5px 20px;
	width: 900px;
	margin: 20px auto;
	text-align: center;
	text-transform: capitalize;
	border-top-style: solid;
	border-top-color: #6D7B8D;
	border-top-width: 1px;
}
-->
</style>
</head>

<body>
	<div id="header">
     GitHub
	</div>						

	<div id="content">
<div class="display">
      <h3>Tutorial</h3>
      <li><a href="https://github.com/">Homepage</a></li>
      <li><a href="http://git-scm.com/doc">Document</a></li>
      <h4>Note:
	      <br>Version Control System (VCS)
	      <br>git clone git://git.kernel.org/pub/scm/git/git.git, update Git
	      <br>git config --global user.name "John Doe", set up username
	      <br>git config --global user.email johndoe@example.com, set up e-mail
	      <br>git config --global core.editor emacs, set up text editor
	      <br>git config --global merge.tool vimdiff, set up a different diff tool
	      <br>git config --list, check the set
	      <br>git help add, git add --help, man git-add, get help
      </h4>
      <h4>Basics (Chapter 1-2):
	      <br>git init, initialize a repository
	      <br>git add *.c, track files, or stage the modified files
	      <br>git reset HEAD file, unstage file
	      <br>git rm --cached file, untrack file
	      <br>git diff, To see what you’ve changed but not yet staged
	      <br>git diff --cached, see what you’ve staged that will go into your next commit
	      <br>git commit -m "Project Name", initial commit
	      <br>git commit -a, automaticlly commit
	      <br>git clone [url], Every version of every file for the history of the project is pulled down
	      <br>git status, check the status of the files
	      <br>.gitignore, set the the files that could be ignored in the status list, put in the same directory as .git
	      <br>git diff, show the difference between the files in your working area and the files in the stage area
	      <br>git commit, commit the staged files
	      <br>git rm, remove the files, The next time you commit, the file will be gone and no longer tracked. 
	      <br>git mv README.txt README, rename the file
	      <br>git log, show the histroy commits
	      <br>git log -p -2, shows the diff introduced in each commit, limits the output to only the last two entries
	      <br>git log --stat, abbreviated stats for each commit
	      <br>git log --pretty=oneline, short, full, fuller, changes the log output to formats other than the default
	      <br>git log --graph, showing your branch and merge history
	      <br>git log --since=2.weeks, get last two weeks' records
	      <br>gitk, display the commit history
	      <br>git commit --amend, append some updated to the previous commit
	      <br>git checkout -- file, discharge the changes
	      <br>git remote -v, lists the shortnames of each remote handle
	      <br>git remote add [shortname] [url], add remote repository
	      <br>git remote rm [shortname], remove the remote repository
	      <br>git fetch [shortname], Fetching and Pulling from Your Remotes, it doesn’t automatically merge it with any of your work or modify what you’re currently working on
	      <br>git pull [shortname], automatically fetch and then merge a remote branch into your current branch
	      <br>git push [remote-name] [branch-name], push your project at a point to the remote server
	      <br>git remote show [remote-name], see more information about a particular remote
	      <br>git remote rename pb paul, rename a reference
	      <br>git tag -a v1.0 -m "My Version 1.0", create a tag
	      <br>git tag v1.0, create a lightweight tag
	      <br>git push [remote-name] v1.0, transfer the tag to remote servers
	      <br>git show v1.0, show the tagger information
	      <br>git tag, display all tag
	      <br>git tag -d v1.0, remove the tag
      </h4>
      <h4>
	      Branch (Chapter 3):
	      <br>git branch, display all branches
	      <br>git branch testing, create a branch
	      <br>git checkout testing, switch to branch
	      <br>git checkout -b iss53, create a branch and switch to it at the same time
	      <br>git merge, merge two branches
	      <br>git branch, show the branches
	      <br>git branch -d hotfix, delete a branch
      </h4>
      <h4>
	      Protocols:
	      <br>Local Protocols, git clone /opt/git/project.git
	      <br>git remote add local_proj /opt/git/project.git
	      <br>HTTP Protocols, git clone http://example.com/gitproject.git
	      <br>git clone lchen@hpcq.cs.odu.edu:/home/lchen/public_html/git/Skills
	      <br>mkdir git, create a folder named "git"
	      <br>git init --bare, set up the repository server
	      <br>mv hooks/post-update.sample hooks/post-update
	      <br>chmod a+x hooks/post-update
	      <br>git remote add odu lchen@hpcq.cs.odu.edu:/home/lchen/public_html/git
	      <br>git push odu master, push the materials to the server
	      <br>git clone lchen@hpcq.cs.odu.edu:/home/lchen/public_html/git, download the files to local
	      <br>git update-server-info, to make the server to receive the files properly
	      <br>git clone http://www.cs.odu.edu/~lchen/git
      </h4>
      <h4>
	      Tools:
	      <br/>git reflog, a log of where your HEAD and branch references have been for the last few months
      </h4>
      <h4>
	      Backward:
	      <br/>git reset 95ba06760e8e98fcae07c3f43761cd3af15632f3, go back to the older point
	      <br/>git reset 95ba06760e8e98fcae07c3f43761cd3af15632f3 github.htm, go back to the older point for a single file
	      <br/>git reset HEAD, restore all all files from the previous commit
	      <br/>git checkout, go back to the unchanged point for all files
	      <br/>git checkout github.htm, go back to the unchanged point for a single file
	      <br/>git reset --soft HEAD^, back to the parent of HEAD without removing the changes
	      <br/>git reset -q file, resets the index entries
	      <br/>git reset --hard HEAD^, back to the parent of HEAD with removing the changes
	      <br>git show, display the last commit information
	      <br/>git show HEAD^, display the commit information of the parent of HEAD
	      <br/>git show HEAD~2, display the parent of the parent of HEAD
      </h4>
      <li><a href="https://github.com/eagletiger1/Club">Download</a></li>
      <li><a href="http://my.eoe.cn/curious/archive/3563.html">Git Tutorial</a></li>
      <li><a href="http://www.kuqin.com/managetool/20111119/315043.html">Back to Point Tutorial</a></li>
      <li><a href = "http://blog.csdn.net/yihui823/article/details/6673804">CSDN Tutorial I</a></li>
      <li><a href="http://blog.csdn.net/yihui823/article/details/6681214">CSDN Tutorial II</a></li>
      <li><a href = "http://blog.csdn.net/yihui823/article/details/6681240">CSDN Tutorial III</a></li>
      <li><a href="http://blog.csdn.net/booboo2006/article/details/7471373">Reset vs Revert</a></li>
</div>



</div></body></html>
